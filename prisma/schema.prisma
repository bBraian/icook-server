// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id          Int     @id @default(autoincrement())
  email       String  @unique
  password    String
  name        String
  avatar      String?
  username    String? @unique
  description String? @db.MediumText()

  Recipe           Recipe[]
  UserSavedRecipes UserSavedRecipes[]
  RecipeRating     RecipeRating[]

  @@map("user")
}

model UserSavedRecipes {
  id        Int @id @default(autoincrement())
  user_id   Int
  recipe_id Int

  user   User   @relation(fields: [user_id], references: [id])
  recipe Recipe @relation(fields: [recipe_id], references: [id])

  @@map("user_saved_recipes")
}

model UserSession {
  id          Int      @id @default(autoincrement())
  user_id     Int      @unique
  token       String   @db.LongText()
  expire_date DateTime

  @@map("user_session")
}

model Recipe {
  id                   Int      @id @default(autoincrement())
  recipe_categories_id Int
  recipe_types_id      Int
  user_id              Int
  name                 String   @db.VarChar(255)
  image                String?  @db.VarChar(255)
  serves               Int
  kitchen_time         String   @db.VarChar(100)
  private              Boolean  @default(false)
  created_at           DateTime @default(now())

  ingredient       RecipeIngredients[]
  steps            RecipeSteps[]
  RecipeRating     RecipeRating[]
  UserSavedRecipes UserSavedRecipes[]
  category         RecipeCategories    @relation(fields: [recipe_categories_id], references: [id])
  type             RecipeTypes         @relation(fields: [recipe_types_id], references: [id])
  user             User                @relation(fields: [user_id], references: [id])

  @@map("recipe")
}

model RecipeIngredients {
  id            Int    @id @default(autoincrement())
  recipe_id     Int
  ingredient_id Int
  amount        String @db.VarChar(255)

  Recipe      Recipe?      @relation(fields: [recipe_id], references: [id])
  Ingredients Ingredients? @relation(fields: [ingredient_id], references: [id])

  @@map("recipe_ingredients")
}

model RecipeSteps {
  id          Int    @id @default(autoincrement())
  description String @db.MediumText()
  recipe_id   Int

  Recipe Recipe? @relation(fields: [recipe_id], references: [id])

  @@map("recipe_steps")
}

model RecipeRating {
  id        Int @id @default(autoincrement())
  user_id   Int
  rating    Int
  recipe_id Int

  Recipe Recipe? @relation(fields: [recipe_id], references: [id])
  user   User    @relation(fields: [user_id], references: [id])

  @@map("recipe_rating")
}

model RecipeCategories {
  id     Int      @id @default(autoincrement())
  name   String   @db.VarChar(255)
  Recipe Recipe[]

  @@map("recipe_categories")
}

model RecipeTypes {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)

  Recipe Recipe[]

  @@map("recipe_types")
}

model Ingredients {
  id    Int    @id @default(autoincrement())
  name  String @db.VarChar(255)
  image String @db.VarChar(255)

  created_at   DateTime @default(now())
  user_created String   @db.VarChar(255)

  RecipeIngredients RecipeIngredients[]

  @@map("ingredients")
}
